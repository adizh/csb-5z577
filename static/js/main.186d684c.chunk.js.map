{"version":3,"sources":["Todo.js","List.js","Header.js","Search.js","App.js","index.js"],"names":["el","text","newText","newTodo","setTodos","addFav","todos","setNewTodo","submitEdit","useContext","ContextInput","useEffect","console","log","id","onChange","className","completed","onClick","filter","todo","map","type","List","input","search","filteredTodo","newInput","e","includes","Todo","Header","active","length","inactive","Search","setSearch","target","value","placeholder","React","createContext","App","fav","setFav","useState","setInput","status","setStatus","setFiltered","setNewInput","da","localStorage","getItem","JSON","parse","setItem","stringify","newList","filteredF","Provider","preventDefault","Math","random","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.186d684c.chunk.js","sourcesContent":["import { IoIosCloudDone } from \"react-icons/io\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { ContextInput } from \"./App\";\r\n\r\nexport default function ({ el, text }) {\r\n  const {\r\n    newText,\r\n    newTodo,\r\n    setTodos,\r\n    addFav,\r\n    todos,\r\n    setNewTodo,\r\n    submitEdit\r\n  } = useContext(ContextInput);\r\n  const completeHandler = () => {\r\n    setTodos(\r\n      todos.filter((todo) => {\r\n        return todo.id !== el.id;\r\n      })\r\n    );\r\n  };\r\n  const doneTodo = () => {\r\n    setTodos(\r\n      todos.map((todo) => {\r\n        if (todo.id === el.id) {\r\n          return {\r\n            ...todo,\r\n            completed: !todo.completed\r\n          };\r\n        }\r\n        return todo;\r\n      })\r\n    );\r\n  };\r\n  useEffect(() => {\r\n    console.log(todos);\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      {el.id === newTodo ? (\r\n        <input onChange={newText} />\r\n      ) : (\r\n        <span className={el.completed ? \"done\" : \"\"}> {text}</span>\r\n      )}\r\n      <button onClick={completeHandler}>del</button>\r\n      <button className={el.completed ? \"green\" : \"black\"} onClick={doneTodo}>\r\n        done\r\n      </button>\r\n      <button onClick={() => addFav(el)}>fav</button>\r\n\r\n      {el.id === newTodo ? (\r\n        <button type=\"button\" onClick={() => submitEdit(el.id)}>\r\n          {\" \"}\r\n          submit edit\r\n        </button>\r\n      ) : (\r\n        <button onClick={() => setNewTodo(el.id)}>edit</button>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import Todo from \"./Todo\";\r\n\r\nexport default function List({\r\n  newText,\r\n  newTodo,\r\n  input,\r\n  search,\r\n  filteredTodo,\r\n  newInput,\r\n  setTodos,\r\n  todos,\r\n  addFav\r\n}) {\r\n  return (\r\n    <div>\r\n      {filteredTodo\r\n        .filter((e) => e.text.includes(search))\r\n        .map((el) => (\r\n          <Todo text={el.text} el={el} />\r\n        ))}\r\n    </div>\r\n  );\r\n}\r\n","export default function Header({todos}){\r\n  const active=todos.filter((el)=>el.completed).length\r\n  const inactive=todos.filter((e)=>e.completed===false).length\r\n  return(\r\n    <div>\r\n<div>{active} completed todos</div>\r\n{inactive} todos are waiting to be done\r\n    </div>\r\n  )\r\n}","export default function Search({ setSearch }) {\r\n  return (\r\n    <>\r\n      <input\r\n        onChange={(e) => setSearch(e.target.value)}\r\n        placeholder=\"search todo\"\r\n      />\r\n      <button>find todo</button>\r\n    </>\r\n  );\r\n}\r\n","import \"./styles.css\";\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport List from \"./List\";\nimport Header from \"./Header\";\nimport Search from \"./Search\";\nexport const ContextInput = React.createContext();\nexport default function App() {\n  const [fav, setFav] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [input, setInput] = useState(\"\");\n  const [status, setStatus] = useState(\"all\");\n  const [todos, setTodos] = useState([]);\n  const [filteredTodo, setFiltered] = useState([]);\n  const [newInput, setNewInput] = useState(\"\");\n  const [newTodo, setNewTodo] = useState(null);\n\n  useEffect(() => {\n    const da = localStorage.getItem(\"todo\");\n    setTodos(JSON.parse(da));\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"todo\", JSON.stringify(todos));\n  });\n\n  const addTodos = (e) => {\n    e.preventDefault();\n    setTodos([...todos, { text: input, completed: false, id: Math.random() }]);\n    setInput(\"\");\n  };\n  const addFav = (todo) => {\n    const newList = [...fav, todo];\n    setFav(newList);\n  };\n\n  const statusHandle = (e) => {\n    setStatus(e.target.value);\n  };\n  useEffect(() => {\n    filteredF();\n  }, [todos, status, search]);\n\n  const filteredF = () => {\n    switch (status) {\n      case \"done\":\n        setFiltered(todos.filter((e) => e.completed));\n        break;\n      case \"undone\":\n        setFiltered(todos.filter((e) => e.completed === false));\n        break;\n      default:\n        setFiltered(todos);\n        break;\n    }\n  };\n\n  const newText = (e) => {\n    setNewInput(e.target.value);\n  };\n  const submitEdit = (id) => {\n    setTodos(\n      todos.map((e) => {\n        if (e.id === id) {\n          return { ...e, text: newInput };\n        }\n        return e;\n      })\n    );\n  };\n  // function submitEdit(id) {\n  //   const updatedTodos = [...todos].map((todo) => {\n  //     if (todo.id === id) {\n  //       todo.text = newInput;\n  //     }\n  //     return todo;\n  //   });\n  //   setTodos(updatedTodos);\n  //   setNewTodo(null);\n  // }\n  return (\n    <ContextInput.Provider\n      value={{\n        newText,\n        newTodo,\n        setTodos,\n        addFav,\n        todos,\n        setNewTodo,\n        submitEdit\n      }}\n    >\n      <h3>Todo list</h3>\n      <Header todos={todos} />\n      <Search newInput={newInput} setSearch={setSearch} />\n      <form>\n        <input onChange={(e) => setInput(e.target.value)} />\n        <button onClick={addTodos} type=\"button\">\n          Add todo\n        </button>\n      </form>\n      <select onChange={statusHandle}>\n        <option value=\"all\">All</option>\n        <option value=\"done\">Done</option>\n        <option value=\"undone\">Undone</option>\n      </select>\n      <List\n        filteredTodo={filteredTodo}\n        setTodos={setTodos}\n        addFav={addFav}\n        todos={todos}\n        input={input}\n        search={search}\n        newText={newText}\n        newTodo={newTodo}\n      />\n    </ContextInput.Provider>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}